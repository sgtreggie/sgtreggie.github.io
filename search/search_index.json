{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This is a public site with writings, information, and stuff that I've learned. If you feel like the information here is imcomplete, incorrect, dated, etc. you may correct it via push request. You may take a look around if you want. Please keep in mind; I am not a professional. My writings here might be inaccurate to how things really are. I do not write guides. Please do not use my writings as a step-by-step. Using them as a basis is fine.","title":"Welcome"},{"location":"#welcome","text":"This is a public site with writings, information, and stuff that I've learned. If you feel like the information here is imcomplete, incorrect, dated, etc. you may correct it via push request. You may take a look around if you want. Please keep in mind; I am not a professional. My writings here might be inaccurate to how things really are. I do not write guides. Please do not use my writings as a step-by-step. Using them as a basis is fine.","title":"Welcome"},{"location":"3DS%20Things/Moving%20CTRNAND%20save%20data/","text":"Moving CTRNAND save data This is not a guide. DO NOT ATTEMPT WHAT YOU SEE HERE UNLESS YOU KNOW WHAT YOU'RE DOING. Tonight (03/20/22) , I was assisting others with hacking their consoles and resolving issues as usual, but while I was doing that, I'd found an intriguing issue. A guy had come in and asked if he could restore his NAND and pull save data from the SD data after formatting it. At first, this seemed like a weird question, but after elaboration he'd described that he wanted to extract save data from a NAND backup for Activity Log. Now, I've never seen a question like this before. Hell, I've never even attempted something like this before. If I were use a movable.sed from another console, and extract sysdata folders from a NAND backup for that console, could I possibly have my old system's CTRNAND save data on my new one? It seemed perfectly plausible. I wanted to assist the guy, but it was pretty late, and there was no telling if what I'd thought would actually work. So I got to work and decided to try and learn something new. I firstly made a backup of my NAND, then followed Kerry's movable transfer guide to move my New 2DS XL's movable.sed to my other console. I didn't do anything beyond the Replacing section, as I had no SD data that I was trying to replace. Now I needed some system save data to try. Using 3dbrew's System SaveData page I found the locations of a few different system saves. I chose Activity Log and Mii Maker as my examples. I copied the files to sysdata inside the data/<id0> and... it kinda worked. For the most part though, it didn't. At the very least, Activity Log had shown how many titles I'd played. From this, I had learned that maybe what I had in mind wouldn't be possible with only moving the sysdata folders of individual titles. Perhaps I could treat it like how a system transfer does and just move the entire data folder instead? So I opted for that instead. I copied the entire data folder from the source console to the target console. And the good news is that it worked, but, unfortunately, 3D was permanently stuck on. Forever. I couldn't get it to budge, the slider was no use, and it was really hurting my eyes. Unfortunately to fix this I had to delete the Config savegame, and that forced me to set up again. Pretty annoying. Thankfully after doing that it was gone, but so was everything else. So I had to figure out a be-all, end-all solution. What I did to fix everything was simple; Set up the console after pasting the movable Backup the config savegame in data/<id0>/sysdata named 00010017 Paste the data folder from the NAND backup Paste the config savegame again And there it was, all of my data from the source console to the target. It was a great success. From what I could tell, other than the loss of config settings, everything was there. A little bit too much. The friends list and everything freaked me out because my friend code was there (as expected). So I deleted the friends list savegame and the friends module savegame ( 00010032 for the module savegame, as for the other one it depends); USA: 00020096 JPN: 0002008D EUR: 0002009F After that, everything was fine, and I was assigned a new friend code, easing my paranoia. Now all that would be needed is to get your games back onto the SD card (you can use your source systems SD card on the target if you wish), some faketik , and maybe an NNID unlink from the source for use on the target. Think about it like getting a new phone and also getting your number changed. Sources 3dbrew's System SaveData page Kerry's movable transfer guide 3dbrew's Config Savegame page Myself after torturing my console with 3 hours of testing","title":"Moving CTRNAND save data"},{"location":"3DS%20Things/Moving%20CTRNAND%20save%20data/#moving-ctrnand-save-data","text":"This is not a guide. DO NOT ATTEMPT WHAT YOU SEE HERE UNLESS YOU KNOW WHAT YOU'RE DOING. Tonight (03/20/22) , I was assisting others with hacking their consoles and resolving issues as usual, but while I was doing that, I'd found an intriguing issue. A guy had come in and asked if he could restore his NAND and pull save data from the SD data after formatting it. At first, this seemed like a weird question, but after elaboration he'd described that he wanted to extract save data from a NAND backup for Activity Log. Now, I've never seen a question like this before. Hell, I've never even attempted something like this before. If I were use a movable.sed from another console, and extract sysdata folders from a NAND backup for that console, could I possibly have my old system's CTRNAND save data on my new one? It seemed perfectly plausible. I wanted to assist the guy, but it was pretty late, and there was no telling if what I'd thought would actually work. So I got to work and decided to try and learn something new. I firstly made a backup of my NAND, then followed Kerry's movable transfer guide to move my New 2DS XL's movable.sed to my other console. I didn't do anything beyond the Replacing section, as I had no SD data that I was trying to replace. Now I needed some system save data to try. Using 3dbrew's System SaveData page I found the locations of a few different system saves. I chose Activity Log and Mii Maker as my examples. I copied the files to sysdata inside the data/<id0> and... it kinda worked. For the most part though, it didn't. At the very least, Activity Log had shown how many titles I'd played. From this, I had learned that maybe what I had in mind wouldn't be possible with only moving the sysdata folders of individual titles. Perhaps I could treat it like how a system transfer does and just move the entire data folder instead? So I opted for that instead. I copied the entire data folder from the source console to the target console. And the good news is that it worked, but, unfortunately, 3D was permanently stuck on. Forever. I couldn't get it to budge, the slider was no use, and it was really hurting my eyes. Unfortunately to fix this I had to delete the Config savegame, and that forced me to set up again. Pretty annoying. Thankfully after doing that it was gone, but so was everything else. So I had to figure out a be-all, end-all solution. What I did to fix everything was simple; Set up the console after pasting the movable Backup the config savegame in data/<id0>/sysdata named 00010017 Paste the data folder from the NAND backup Paste the config savegame again And there it was, all of my data from the source console to the target. It was a great success. From what I could tell, other than the loss of config settings, everything was there. A little bit too much. The friends list and everything freaked me out because my friend code was there (as expected). So I deleted the friends list savegame and the friends module savegame ( 00010032 for the module savegame, as for the other one it depends); USA: 00020096 JPN: 0002008D EUR: 0002009F After that, everything was fine, and I was assigned a new friend code, easing my paranoia. Now all that would be needed is to get your games back onto the SD card (you can use your source systems SD card on the target if you wish), some faketik , and maybe an NNID unlink from the source for use on the target. Think about it like getting a new phone and also getting your number changed.","title":"Moving CTRNAND save data"},{"location":"3DS%20Things/Moving%20CTRNAND%20save%20data/#sources","text":"3dbrew's System SaveData page Kerry's movable transfer guide 3dbrew's Config Savegame page Myself after torturing my console with 3 hours of testing","title":"Sources"},{"location":"3DS%20Things/Understanding%20movable.sed/","text":"Understanding movable.sed movable.sed is the 3DS consoles encryption key. It is how Nintendo keeps save data, games, DSiWare exports, etc. exclusive to the console they came from. This file is present on CTRNAND in the private folder. It is 320 bytes (with CMAC) or 288 bytes (without CMAC). The movable is constructed of the following; The \"SEED\" magic at the start of the file A 'flag' to indicate the presence of a CMAC(?) If this is set to 01, the 3DS will expect a CMAC to be at the end of the file. If it isn't there, it will not boot. LocalFriendCodeSeed_B (copied from CTRNAND/rw/sys ) The \"keyY\", or the actual 'encryption key' part of the file A CMAC From my testing, a 3DS will not boot if this file is empty or improperly formatted. The following is required for booting; The \"SEED\" magic at the start of the file The \"keyY\", or the actual 'encryption key' part of the file This configuration of the file is the bare minimum and will allow a console to boot. Sources 3dbrew's page on movable.sed My peers in the Nintendo Homebrew Discord server More Wanna use this file to transfer your software from a broken console? redkerry135 has written a guide for that.","title":"Understanding movable.sed"},{"location":"3DS%20Things/Understanding%20movable.sed/#understanding-movablesed","text":"movable.sed is the 3DS consoles encryption key. It is how Nintendo keeps save data, games, DSiWare exports, etc. exclusive to the console they came from. This file is present on CTRNAND in the private folder. It is 320 bytes (with CMAC) or 288 bytes (without CMAC). The movable is constructed of the following; The \"SEED\" magic at the start of the file A 'flag' to indicate the presence of a CMAC(?) If this is set to 01, the 3DS will expect a CMAC to be at the end of the file. If it isn't there, it will not boot. LocalFriendCodeSeed_B (copied from CTRNAND/rw/sys ) The \"keyY\", or the actual 'encryption key' part of the file A CMAC From my testing, a 3DS will not boot if this file is empty or improperly formatted. The following is required for booting; The \"SEED\" magic at the start of the file The \"keyY\", or the actual 'encryption key' part of the file This configuration of the file is the bare minimum and will allow a console to boot.","title":"Understanding movable.sed"},{"location":"3DS%20Things/Understanding%20movable.sed/#sources","text":"3dbrew's page on movable.sed My peers in the Nintendo Homebrew Discord server","title":"Sources"},{"location":"3DS%20Things/Understanding%20movable.sed/#more","text":"Wanna use this file to transfer your software from a broken console? redkerry135 has written a guide for that.","title":"More"}]}